#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(GetOptions);

my $help = 0;
GetOptions("help" => \$help) or help();
help() if $help;

my $file = $ARGV[0] || help();
my $time = $ARGV[1] || help();

my $end = $ARGV[2] ? " -to \"$ARGV[2]\" " : '';

# Argument validation

unless (-e $file) {
    print "Can't find file '$file'\n";
    help();
}

unless ( $file =~ /\.mp4$/ ) {
    print "That's not an mp4 file. Refusing to trim it.\n";
    help();
}

# Simple time format checking. Let ffmpeg check that they're actually
# valid time stamps.
help("Start time doesn't look like a valid time.") unless $time =~ m/\d\d:\d\d:\d\d/;
help("End time doesn't look like a valid time.") unless ( $end =~ m/"\d\d:\d\d:\d\d"/ || $end eq '' );

$file =~ s/\.mp4$//;
my $orig    = $file . ".mp4";
my $trimmed = $file . "_edit.mp4";
my $bak     = $file . "_bak.mp4";

# ok, now the nasty work
qx/ffmpeg -noaccurate_seek -ss "$time" $end -i $orig -c copy $trimmed/;
qx/mv $orig $bak/;
qx/mv $trimmed $orig/;

sub help {
    my @ARGS = @_;
    if ( $ARGS[0] ) {
        print "\nERROR: " . $ARGS[0] . "\n";
    }

print qq~

Usage:

Trims a video given start, and, optionally, end time. Preview and determine when the actual content starts and ends.

$0 FILE (must be mp4) TIME1 [TIME2]

Eg: $0 openofficeT1514.mp4 00:00:14

You can optionally provide an end time to trim dead air at the end.

Eg: $0 openofficeT1514.mp4 00:00:14 00:55:47

Times should be provided as hh:mm:ss (eg '00:01:34')

NOTE: Your original file will be preserved as whatever_bak.mp4, in case
you screw up.

~;
    exit();
}
